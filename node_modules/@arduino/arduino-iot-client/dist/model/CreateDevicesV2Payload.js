"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The CreateDevicesV2Payload model module.
 * @module model/CreateDevicesV2Payload
 * @version 1.4.2
 */
var CreateDevicesV2Payload =
/*#__PURE__*/
function () {
  /**
   * Constructs a new <code>CreateDevicesV2Payload</code>.
   * DeviceV2 describes a device.
   * @alias module:model/CreateDevicesV2Payload
   * @param type {module:model/CreateDevicesV2Payload.TypeEnum} The type of the device
   */
  function CreateDevicesV2Payload(type) {
    _classCallCheck(this, CreateDevicesV2Payload);

    CreateDevicesV2Payload.initialize(this, type);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CreateDevicesV2Payload, null, [{
    key: "initialize",
    value: function initialize(obj, type) {
      obj['type'] = type;
    }
    /**
     * Constructs a <code>CreateDevicesV2Payload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDevicesV2Payload} obj Optional instance to populate.
     * @return {module:model/CreateDevicesV2Payload} The populated <code>CreateDevicesV2Payload</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateDevicesV2Payload();

        if (data.hasOwnProperty('fqbn')) {
          obj['fqbn'] = _ApiClient["default"].convertToType(data['fqbn'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('serial')) {
          obj['serial'] = _ApiClient["default"].convertToType(data['serial'], 'String');
        }

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }

        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'String');
        }

        if (data.hasOwnProperty('wifi_fw_version')) {
          obj['wifi_fw_version'] = _ApiClient["default"].convertToType(data['wifi_fw_version'], 'String');
        }
      }

      return obj;
    }
  }]);

  return CreateDevicesV2Payload;
}();
/**
 * The fully qualified board name
 * @member {String} fqbn
 */


CreateDevicesV2Payload.prototype['fqbn'] = undefined;
/**
 * The friendly name of the device
 * @member {String} name
 */

CreateDevicesV2Payload.prototype['name'] = undefined;
/**
 * The serial uuid of the device
 * @member {String} serial
 */

CreateDevicesV2Payload.prototype['serial'] = undefined;
/**
 * The type of the device
 * @member {module:model/CreateDevicesV2Payload.TypeEnum} type
 */

CreateDevicesV2Payload.prototype['type'] = undefined;
/**
 * The user_id associated to the device. If absent it will be inferred from the authentication header
 * @member {String} user_id
 */

CreateDevicesV2Payload.prototype['user_id'] = undefined;
/**
 * The version of the NINA/WIFI101 firmware running on the device
 * @member {String} wifi_fw_version
 */

CreateDevicesV2Payload.prototype['wifi_fw_version'] = undefined;
/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */

CreateDevicesV2Payload['TypeEnum'] = {
  /**
   * value: "mkrwifi1010"
   * @const
   */
  "mkrwifi1010": "mkrwifi1010",

  /**
   * value: "mkr1000"
   * @const
   */
  "mkr1000": "mkr1000",

  /**
   * value: "nano_33_iot"
   * @const
   */
  "nano_33_iot": "nano_33_iot",

  /**
   * value: "mkrgsm1400"
   * @const
   */
  "mkrgsm1400": "mkrgsm1400",

  /**
   * value: "mkrwan1310"
   * @const
   */
  "mkrwan1310": "mkrwan1310",

  /**
   * value: "mkrwan1300"
   * @const
   */
  "mkrwan1300": "mkrwan1300",

  /**
   * value: "mkrnb1500"
   * @const
   */
  "mkrnb1500": "mkrnb1500",

  /**
   * value: "lora-device"
   * @const
   */
  "lora-device": "lora-device",

  /**
   * value: "login_and_secretkey_wifi"
   * @const
   */
  "login_and_secretkey_wifi": "login_and_secretkey_wifi",

  /**
   * value: "envie_m7"
   * @const
   */
  "envie_m7": "envie_m7",

  /**
   * value: "nanorp2040connect"
   * @const
   */
  "nanorp2040connect": "nanorp2040connect",

  /**
   * value: "nicla_vision"
   * @const
   */
  "nicla_vision": "nicla_vision"
};
var _default = CreateDevicesV2Payload;
exports["default"] = _default;