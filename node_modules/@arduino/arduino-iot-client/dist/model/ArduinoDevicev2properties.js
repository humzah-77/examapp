"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ArduinoProperty = _interopRequireDefault(require("./ArduinoProperty"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ArduinoDevicev2properties model module.
 * @module model/ArduinoDevicev2properties
 * @version 1.4.2
 */
var ArduinoDevicev2properties =
/*#__PURE__*/
function () {
  /**
   * Constructs a new <code>ArduinoDevicev2properties</code>.
   * ArduinoDevicev2properties media type (default view)
   * @alias module:model/ArduinoDevicev2properties
   * @param dataRetentionDays {Number} How many days the data will be kept
   * @param deviceId {String} The device of the property
   * @param properties {Array.<module:model/ArduinoProperty>} ArduinoPropertyCollection is the media type for an array of ArduinoProperty (default view)
   * @param userId {String} The user id of the owner
   */
  function ArduinoDevicev2properties(dataRetentionDays, deviceId, properties, userId) {
    _classCallCheck(this, ArduinoDevicev2properties);

    ArduinoDevicev2properties.initialize(this, dataRetentionDays, deviceId, properties, userId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ArduinoDevicev2properties, null, [{
    key: "initialize",
    value: function initialize(obj, dataRetentionDays, deviceId, properties, userId) {
      obj['data_retention_days'] = dataRetentionDays;
      obj['deviceId'] = deviceId;
      obj['properties'] = properties;
      obj['user_id'] = userId;
    }
    /**
     * Constructs a <code>ArduinoDevicev2properties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArduinoDevicev2properties} obj Optional instance to populate.
     * @return {module:model/ArduinoDevicev2properties} The populated <code>ArduinoDevicev2properties</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ArduinoDevicev2properties();

        if (data.hasOwnProperty('data_retention_days')) {
          obj['data_retention_days'] = _ApiClient["default"].convertToType(data['data_retention_days'], 'Number');
        }

        if (data.hasOwnProperty('deviceId')) {
          obj['deviceId'] = _ApiClient["default"].convertToType(data['deviceId'], 'String');
        }

        if (data.hasOwnProperty('properties')) {
          obj['properties'] = _ApiClient["default"].convertToType(data['properties'], [_ArduinoProperty["default"]]);
        }

        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'String');
        }
      }

      return obj;
    }
  }]);

  return ArduinoDevicev2properties;
}();
/**
 * How many days the data will be kept
 * @member {Number} data_retention_days
 */


ArduinoDevicev2properties.prototype['data_retention_days'] = undefined;
/**
 * The device of the property
 * @member {String} deviceId
 */

ArduinoDevicev2properties.prototype['deviceId'] = undefined;
/**
 * ArduinoPropertyCollection is the media type for an array of ArduinoProperty (default view)
 * @member {Array.<module:model/ArduinoProperty>} properties
 */

ArduinoDevicev2properties.prototype['properties'] = undefined;
/**
 * The user id of the owner
 * @member {String} user_id
 */

ArduinoDevicev2properties.prototype['user_id'] = undefined;
var _default = ArduinoDevicev2properties;
exports["default"] = _default;