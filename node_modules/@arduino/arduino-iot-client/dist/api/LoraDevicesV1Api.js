"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ArduinoLoradevicev = _interopRequireDefault(require("../model/ArduinoLoradevicev1"));

var _CreateLoraDevicesV1Payload = _interopRequireDefault(require("../model/CreateLoraDevicesV1Payload"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
* LoraDevicesV1 service.
* @module api/LoraDevicesV1Api
* @version 1.4.2
*/
var LoraDevicesV1Api =
/*#__PURE__*/
function () {
  /**
  * Constructs a new LoraDevicesV1Api. 
  * @alias module:api/LoraDevicesV1Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function LoraDevicesV1Api(apiClient) {
    _classCallCheck(this, LoraDevicesV1Api);

    this.apiClient = apiClient || _ApiClient["default"].instance;
  }
  /**
   * create lora_devices_v1
   * Create a new lora device. Its info are saved on our database, and on the lora provider network. Creates a device_v2 automatically
   * @param {module:model/CreateLoraDevicesV1Payload} createLoraDevicesV1Payload 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoLoradevicev1} and HTTP response
   */


  _createClass(LoraDevicesV1Api, [{
    key: "loraDevicesV1CreateWithHttpInfo",
    value: function loraDevicesV1CreateWithHttpInfo(createLoraDevicesV1Payload) {
      var postBody = createLoraDevicesV1Payload; // verify the required parameter 'createLoraDevicesV1Payload' is set

      if (createLoraDevicesV1Payload === undefined || createLoraDevicesV1Payload === null) {
        throw new Error("Missing the required parameter 'createLoraDevicesV1Payload' when calling loraDevicesV1Create");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = [];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = _ArduinoLoradevicev["default"];
      return this.apiClient.callApi('/v1/lora-devices/', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * create lora_devices_v1
     * Create a new lora device. Its info are saved on our database, and on the lora provider network. Creates a device_v2 automatically
     * @param {module:model/CreateLoraDevicesV1Payload} createLoraDevicesV1Payload 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoLoradevicev1}
     */

  }, {
    key: "loraDevicesV1Create",
    value: function loraDevicesV1Create(createLoraDevicesV1Payload) {
      return this.loraDevicesV1CreateWithHttpInfo(createLoraDevicesV1Payload).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);

  return LoraDevicesV1Api;
}();

exports["default"] = LoraDevicesV1Api;