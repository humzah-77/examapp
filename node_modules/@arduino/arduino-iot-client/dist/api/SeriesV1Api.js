"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ArduinoSeriesBatch = _interopRequireDefault(require("../model/ArduinoSeriesBatch"));

var _ArduinoSeriesRawBatch = _interopRequireDefault(require("../model/ArduinoSeriesRawBatch"));

var _BatchQueryRawRequestsMediaV = _interopRequireDefault(require("../model/BatchQueryRawRequestsMediaV1"));

var _BatchQueryRequestsMediaV = _interopRequireDefault(require("../model/BatchQueryRequestsMediaV1"));

var _Error = _interopRequireDefault(require("../model/Error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
* SeriesV1 service.
* @module api/SeriesV1Api
* @version 0.0.1
*/
var SeriesV1Api =
/*#__PURE__*/
function () {
  /**
  * Constructs a new SeriesV1Api. 
  * @alias module:api/SeriesV1Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function SeriesV1Api(apiClient) {
    _classCallCheck(this, SeriesV1Api);

    this.apiClient = apiClient || _ApiClient["default"].instance;
  }
  /**
   * batch_query series_v1
   * Returns the batch of time-series data
   * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesBatch} and HTTP response
   */


  _createClass(SeriesV1Api, [{
    key: "seriesV1BatchQueryWithHttpInfo",
    value: function seriesV1BatchQueryWithHttpInfo(batchQueryRequestsMediaV1) {
      var postBody = batchQueryRequestsMediaV1; // verify the required parameter 'batchQueryRequestsMediaV1' is set

      if (batchQueryRequestsMediaV1 === undefined || batchQueryRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchQueryRequestsMediaV1' when calling seriesV1BatchQuery");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.batch+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesBatch["default"];
      return this.apiClient.callApi('/v1/series/batch_query', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * batch_query series_v1
     * Returns the batch of time-series data
     * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesBatch}
     */

  }, {
    key: "seriesV1BatchQuery",
    value: function seriesV1BatchQuery(batchQueryRequestsMediaV1) {
      return this.seriesV1BatchQueryWithHttpInfo(batchQueryRequestsMediaV1).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
    /**
     * batch_query_raw series_v1
     * Returns the batch of time-series data raw
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesRawBatch} and HTTP response
     */

  }, {
    key: "seriesV1BatchQueryRawWithHttpInfo",
    value: function seriesV1BatchQueryRawWithHttpInfo(batchQueryRawRequestsMediaV1) {
      var postBody = batchQueryRawRequestsMediaV1; // verify the required parameter 'batchQueryRawRequestsMediaV1' is set

      if (batchQueryRawRequestsMediaV1 === undefined || batchQueryRawRequestsMediaV1 === null) {
        throw new _Error["default"]("Missing the required parameter 'batchQueryRawRequestsMediaV1' when calling seriesV1BatchQueryRaw");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.raw.batch+json', 'application/vnd.goa.error+json'];
      var returnType = _ArduinoSeriesRawBatch["default"];
      return this.apiClient.callApi('/v1/series/batch_query_raw', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * batch_query_raw series_v1
     * Returns the batch of time-series data raw
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesRawBatch}
     */

  }, {
    key: "seriesV1BatchQueryRaw",
    value: function seriesV1BatchQueryRaw(batchQueryRawRequestsMediaV1) {
      return this.seriesV1BatchQueryRawWithHttpInfo(batchQueryRawRequestsMediaV1).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);

  return SeriesV1Api;
}();

exports["default"] = SeriesV1Api;